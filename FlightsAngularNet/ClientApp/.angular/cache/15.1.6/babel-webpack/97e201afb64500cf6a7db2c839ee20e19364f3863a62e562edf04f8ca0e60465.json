{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet BookFlightComponent = class BookFlightComponent {\n  constructor(route, flightservice, router, authService, fb) {\n    this.route = route;\n    this.flightservice = flightservice;\n    this.router = router;\n    this.authService = authService;\n    this.fb = fb;\n    this.flightId = \"not loaded\";\n    this.flight = {};\n    this.form = this.fb.group({\n      number: [1, Validators.compose([Validators.required, Validators.min(1), Validators.max(254)])]\n    });\n    this.findFlight = flightId => {\n      this.flightId = flightId ?? \"not passed\";\n      this.flightservice.findFlights$Json({\n        id: this.flightId\n      }).subscribe(flight => this.flight = flight, this.HandleError);\n    };\n    this.HandleError = err => {\n      if (err.status == 404 || err.status == 400) {\n        alert(\"The flight is not found!\");\n        this.router.navigate(['/search-flight']);\n      }\n      console.log(\"error status code \" + err.status);\n      console.log(\"error status Message \" + err.statusText);\n      console.log(err);\n    };\n  }\n  ngOnInit() {\n    if (!this.authService.currentUser) {\n      this.router.navigate(['/register-passenger']);\n    }\n    this.route.paramMap.subscribe(p => this.findFlight(p.get(\"flightId\")));\n  }\n  book() {\n    if (this.form.invalid) {\n      return;\n    }\n    console.log(`booking ${this.form.get('number')?.value} passengers for the flight ${this.flightId}`);\n    const booking = {\n      flightId: this.flight.id,\n      passengerEmail: this.authService.currentUser?.email,\n      numberOfSeats: this.form.get('number')?.value\n    };\n    this.flightservice.bookFlights({\n      body: booking\n    }).subscribe(_ => this.router.navigate([\"/my-booking\"]), this.HandleError);\n  }\n  // creating a getter for getting the number\n  get number() {\n    return this.form.controls.number;\n  }\n};\nBookFlightComponent = __decorate([Component({\n  selector: 'app-book-flight',\n  templateUrl: './book-flight.component.html',\n  styleUrls: ['./book-flight.component.css']\n})], BookFlightComponent);\nexport { BookFlightComponent };","map":{"version":3,"mappings":"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","names":["Component","Validators","BookFlightComponent","constructor","route","flightservice","router","authService","fb","group","number","compose","required","min","max","flightId","findFlights$Json","id","subscribe","flight","HandleError","err","status","alert","navigate","console","log","statusText","ngOnInit","currentUser","paramMap","p","findFlight","get","book","form","invalid","value","booking","passengerEmail","email","numberOfSeats","bookFlights","body","_","controls","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Bishop\\Documents\\angular projects\\FlightsAngularNet\\FlightsAngularNet\\ClientApp\\src\\app\\book-flight\\book-flight.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute,Router } from '@angular/router';\r\nimport { FlightsService } from '../api/services/flights.service';\r\nimport { BookDto, FlightsRm } from '../api/models'\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { FormBuilder,Validators } from '@angular/forms';\r\n\r\n\n\n@Component({\n  selector: 'app-book-flight',\n  templateUrl: './book-flight.component.html',\n  styleUrls: ['./book-flight.component.css']\n})\nexport class BookFlightComponent implements OnInit {\n  flightId = \"not loaded\";\n  flight: FlightsRm = {}\n\n\n  constructor(private route: ActivatedRoute, private flightservice: FlightsService, private router: Router\n    , private authService: AuthService, private fb: FormBuilder) {\n\r\n  }\n\n  form = this.fb.group({\n    number: [1, Validators.compose([Validators.required, Validators.min(1), Validators.max(254)])]\r\n  })\n  \n\n  ngOnInit(): void {\n    if (!this.authService.currentUser) {\n      this.router.navigate(['/register-passenger']);\r\n    }\n    this.route.paramMap.subscribe(p => this.findFlight(p.get(\"flightId\")));\n\r\n  }\n\n  private findFlight = (flightId: string | null) => {\n    this.flightId = flightId ?? \"not passed\";\r\n\r\n    this.flightservice.findFlights$Json({ id: this.flightId }).subscribe(flight => this.flight = flight, this.HandleError);\r\n  };\n\n  private HandleError = (err: any) => {\n    if (err.status == 404 || err.status==400) {\n      alert(\"The flight is not found!\");\r\n      this.router.navigate(['/search-flight'])\r\n    }\n    console.log(\"error status code \" + err.status);\n    console.log(\"error status Message \" + err.statusText);\n    console.log(err)\r\n  }\n  book() {\n    if (this.form.invalid) {\n      return;\r\n    }\n    console.log(`booking ${this.form.get('number')?.value} passengers for the flight ${this.flightId}`)\r\n\r\n\r\n    const booking: BookDto = {\r\n      flightId: this.flight.id,\r\n      passengerEmail: this.authService.currentUser?.email,\r\n      numberOfSeats: this.form.get('number')?.value!\r\n    }\r\n    this.flightservice.bookFlights({ body: booking }).subscribe(_ => this.router.navigate([\"/my-booking\"]), this.HandleError)\r\n    \r\n  }\n\n  // creating a getter for getting the number\n\n  get number() {\n    return this.form.controls.number;\r\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}